# VIC 20 BASIC startup with at least 8k memory expansion

MEMORY {
    ZP:   start = $0000, size = $0100, type = rw;
    RAM0: start = $0400, size = $0C00, type = rw;
    RAM:  start = $11FF, size = $0201, type = rw, fill = yes;
    SCR:  start = $1400, size = $0400, type = ro, fill = yes;
    BUF:  start = $1800, size = $0400, type = rw, fill = yes;
    CHAR: start = $1C00, size = $0400, type = rw, fill = yes;
    # 8/16/24K memory expansion
    RAM1: start = $2000, size = $2000, type = rw;
    RAM2: start = $4000, size = $2000, type = rw;
    RAM3: start = $6000, size = $2000, type = rw;
    # character ROM, VIC I/O registers & color maps
    PET:  start = $8000, size = $1000, type = ro;
    VIC:  start = $9000, size = $1000, type = rw;
    # 4/8K expansion cartridge ROM (or RAM)
    ROM1: start = $A000, size = $1000, type = ro; # fill = yes;
    ROM2: start = $B000, size = $1000, type = ro; # fill = yes;
    # 8K BASIC 2.0, 8K KERNEL
    BAS2: start = $C000, size = $2000, type = ro;
    KERN: start = $E000, size = $2000, type = ro;
}

SEGMENTS {
    BASIC:    load = RAM, type = ro, define = yes, optional = no;
    STARTUP:  load = RAM, type = ro, define = yes, optional = no;
    SPLASH:   load = SCR, type = ro, define = yes, optional = yes;
    SSSBUF:   load = BUF, type = rw, define = yes, optional = no;
    MYDATA:   load = BUF, type = rw, define = yes, optional = no;
    MYCHAR:   load = CHAR, type = rw, define = yes, optional = no;
    CODE:     load = RAM1, type = ro, define = yes, optional = no;
    SPRITE:   load = RAM1, type = ro, define = yes, optional = no;
    RODATA:   load = RAM1, type = ro, define = yes, optional = no;
}

FEATURES {
	STARTADDRESS:	default = $11FF;
}

